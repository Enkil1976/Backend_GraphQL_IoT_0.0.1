services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: iot-postgres-local
    environment:
      POSTGRES_DB: invernadero_iot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_local:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: iot-redis-local
    command: redis-server --requirepass redis123 --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data_local:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis123", "ping"]
      interval: 15s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Database Initialization
  db-init:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: iot-db-init-local
    environment:
      NODE_ENV: development
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DATABASE: invernadero_iot
      PG_USER: postgres
      PG_PASSWORD: postgres123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis123
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["init-db"]
    restart: "no"

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: iot-app-local
    ports:
      - "4001:4001"
    environment:
      NODE_ENV: development
      PORT: 4001
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DATABASE: invernadero_iot
      PG_USER: postgres
      PG_PASSWORD: postgres123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis123
      MQTT_HOST: sdb201a6.ala.us-east-1.emqxsl.com
      MQTT_PORT: 8883
      MQTT_USERNAME: Backend
      MQTT_PASSWORD: 11211121
      MQTT_BROKER_URL: mqtts://Backend:11211121@sdb201a6.ala.us-east-1.emqxsl.com:8883
      JWT_SECRET: super_secret_jwt_key_for_local_development_only_32_chars
      ACCESS_TOKEN_SECRET: access_token_secret_for_local_dev_different_from_jwt
      REFRESH_TOKEN_SECRET: refresh_token_secret_for_local_dev_unique_value
      BCRYPT_ROUNDS: 10
      CORS_ORIGINS: http://localhost:3000,http://localhost:5173
      GRAPHQL_INTROSPECTION: "true"
      GRAPHQL_PLAYGROUND: "true"
      GRAPHQL_DEBUG: "true"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      db-init:
        condition: service_completed_successfully
    command: ["node", "src/server.js"]
    restart: unless-stopped

volumes:
  postgres_data_local:
  redis_data_local: